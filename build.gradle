buildscript {
    repositories {
        google()
        jcenter()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }

    dependencies {
        classpath Android.GradlePlugin
        classpath Kotlin.GradlePlugin
        classpath Android.SafeArgsPlugin
    }
}

plugins {
    id "io.gitlab.arturbosch.detekt" version "1.12.0"
    id "com.github.ben-manes.versions" version "0.30.0"
}

subprojects {
    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
        kotlinOptions {
            freeCompilerArgs += '-Xopt-in=kotlin.RequiresOptIn'
            freeCompilerArgs += '-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi'
            freeCompilerArgs += '-Xopt-in=kotlinx.coroutines.FlowPreview'
            freeCompilerArgs += '-Xopt-in=kotlin.Experimental'
            freeCompilerArgs += "-Xallow-jvm-ir-dependencies"
            jvmTarget = "1.8"
        }
    }
}

detekt {
    failFast = true // fail build on any finding
    buildUponDefaultConfig = true // preconfigure defaults
    config = files("$projectDir/config/detekt.yml") // point to your custom config defining rules to run, overwriting default behavior
    baseline = file("$projectDir/config/baseline.xml") // a way of suppressing issues before introducing detekt

    reports {
        html.enabled = true // observe findings in your browser with structure and code snippets
        xml.enabled = true // checkstyle like format mainly for integrations like Jenkins
        txt.enabled = true // similar to the console output, contains issue signature to manually edit baseline files
    }
}

dependencies {
    detekt "io.gitlab.arturbosch.detekt:detekt-cli:1.12.0"
    detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:1.12.0"
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
